name: Release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-latest, macos-latest]
        include:
          - os: ubuntu-20.04
            libacl: libacl1-dev
            toolchain: stable
          - os: windows-latest
            libacl: ""
            toolchain: nightly
          - os: macos-latest
            libacl: ""
            toolchain: stable
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        target: ${{ matrix.os == 'windows-latest' && 'x86_64-pc-windows-msvc' || 'x86_64-unknown-linux-gnu' }}
        default: true

    - name: Install dependencies (Linux only)
      if: matrix.os == 'ubuntu-20.04'
      run: sudo apt-get install -y ${{ matrix.libacl }}

    - name: Build
      run: cargo build --release

    - name: Create release directory
      run: mkdir -p release

    - name: Move executable (Linux)
      if: matrix.os == 'ubuntu-20.04'
      run: mv target/release/zffanalyze release/zffanalyze-x86_64-linux

    - name: Move executable (Windows)
      if: matrix.os == 'windows-latest'
      run: mv target/release/zffanalyze.exe release/zffanalyze-x86_64.exe

    - name: Move executable (macOS)
      if: matrix.os == 'macos-latest'
      run: mv target/release/zffanalyze release/zffanalyze-x86_64-macos

    - name: Build AppImage (Linux only)
      if: matrix.os == 'ubuntu-20.04'
      run: |
        curl -Lo appimagetool.AppImage https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        curl -Lo utilities-terminal.png https://github.com/ph0llux/zffanalyze/blob/master/.github/terminal.png
        chmod +x appimagetool.AppImage
        mkdir -p AppDir/usr/bin
        cp release/zffanalyze-x86_64-linux AppDir/usr/bin/zffanalyze
        cp utilities-terminal.png AppDir/
        echo "[Desktop Entry]
        Name=zffanalyze
        Exec=zffanalyze
        Icon=utilities-terminal
        Type=Application
        Categories=Utility;" > AppDir/zffanalyze.desktop
        ./appimagetool.AppImage AppDir release/zffanalyze-x86_64.AppImage

    - name: Upload Release Asset
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-release
        path: release/
        
  release:
    needs: build
    runs-on: ubuntu-20.04
    steps:
    - name: Download binaries
      uses: actions/download-artifact@v2
      with:
        name: ubuntu-20.04-release
        path: ./release
    - name: Download Windows binaries
      uses: actions/download-artifact@v2
      with:
        name: windows-latest-release
        path: ./release
    - name: Download macOS binaries
      uses: actions/download-artifact@v2
      with:
        name: macos-latest-release
        path: ./release

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release/zffanalyze-x86_64-linux
          release/zffanalyze-x86_64.exe
          release/zffanalyze-x86_64-macos
          release/zffanalyze-x86_64.AppImage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}